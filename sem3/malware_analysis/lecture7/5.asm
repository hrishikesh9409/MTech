extern fclose
extern fopen
extern fread
extern memset
extern printf

%define BUF_SIZE 20
%define ELEM_SIZE 1

section .rodata
    open_error    : db "Cannot open file! Exiting!", 10, 0
    open_mode     : db "r", 0
    output_format : db "%s", 0
    usage         : db "Usage: %s FILENAME", 10, 0

section .bss
    buffer   : resb BUF_SIZE + 1
    filename : resd 1
    fh       : resd 1

section .text
    global main

    main:
        push ebp
        mov ebp, esp

        mov edi, DWORD [esp + 8]    ;argc
        mov esi, DWORD [esp + 12]   ;argv

        cmp edi, 2
        jne .nofilename

        mov eax, [esi + 4]
        mov DWORD [filename], eax

        push open_mode
        push DWORD [filename]
        call fopen
        add esp, 8
        test eax, eax
        jz .openfailed

        mov [fh], eax

        push BUF_SIZE
        push 0
        push buffer
        call memset
        add esp, 12

        push DWORD [fh]
        push BUF_SIZE
        push ELEM_SIZE
        push buffer
        call fread
        add esp, 16
        mov BYTE [buffer + BUF_SIZE], 0

        push buffer
        push output_format
        call printf
        add esp, 8

        push DWORD [fh]
        call fclose
        add esp, 4
        mov eax, 0
        jmp .final

        .nofilename:
            push DWORD [esi]
            push usage
            call printf
            add esp, 8
            mov eax, 0
            jmp .final

        .openfailed:
            push open_error
            call printf
            add esp, 4
            mov eax, 1
            jmp .final

        .final:
            leave
            ret
