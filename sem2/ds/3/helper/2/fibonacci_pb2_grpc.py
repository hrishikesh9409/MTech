# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities

import fibonacci_pb2 as fibonacci__pb2


class FibonacciComputerStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetNthFibonacciNumber = channel.unary_unary(
        '/Fibonacci.FibonacciComputer/GetNthFibonacciNumber',
        request_serializer=fibonacci__pb2.FibRequest.SerializeToString,
        response_deserializer=fibonacci__pb2.FibResponse.FromString,
        )


class FibonacciComputerServicer(object):

  def GetNthFibonacciNumber(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_FibonacciComputerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetNthFibonacciNumber': grpc.unary_unary_rpc_method_handler(
          servicer.GetNthFibonacciNumber,
          request_deserializer=fibonacci__pb2.FibRequest.FromString,
          response_serializer=fibonacci__pb2.FibResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Fibonacci.FibonacciComputer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
